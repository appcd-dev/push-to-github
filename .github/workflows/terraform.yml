name: 'Terraform'

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.tf'
      - '**.tfvars'
      - '.github/workflows/terraform.yml'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.7.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Configure Google Cloud Credentials
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    - name: Terraform Init
      run: terraform init
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}

    - name: Terraform Plan
      run: terraform plan -var-file=terraform.tfvars
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}

    - name: Terraform Apply
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      run: terraform apply -var-file=terraform.tfvars -auto-approve
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }} 